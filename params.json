{"tagline":"Data persistence & logging utility for IBM Rational® Publishing Engine™.","note":"Don't delete this file! It's used internally to help with page regeneration.","google":"","name":"RPE Tools JS","body":"### Multi-Template Variable Persistence\r\nEver found yourself wishing for an easy way to persist variables between multi-template IBM Rational® Publishing Engine™ document specifications? With this library, it's as easy as adding this to one document template:\r\n\r\n```\r\nRPETools.Storage.write(\"myVariable\",\"My variable's value\");\r\n```\r\n\r\nAnd this to another:\r\n\r\n```\r\nvar myVariable = RPETools.Storage.read(\"myVariable\");\r\n```\r\n\r\n### Supercharged Logging\r\nIt can often by useful to embed log style messages within the actual content of an RPE-generated document; for example, when an expected DOORS attribute couldn't be found.\r\n\r\nThis library provides a sensible mechanism for recording, tagging and processing log messages, such that you may easily bookmark them in your generated document and provide your reader with a hyperlinked table of \"Publishing Log Messages\" in your document's front matter.\r\n\r\nLogging a message is effortless:\r\n\r\n```\r\n// record a simple log message...\r\nvar bookmark = RPETools.Logger.log(\"The requested Rhapsody package could not be found.\");\r\n\r\n// record a log message tagged \"DOORS\"...\r\nvar bookmark = RPETools.Logger.log(\"Expected DOORS module attribute not found.\",\"DOORS\");\r\n```\r\n\r\n## RPETools.Storage: In Detail\r\n_Coming soon._\r\n\r\n## RPETools.Logger: In Detail\r\n_Coming soon._\r\n\r\n## Getting Started\r\n_Coming soon._\r\n\r\n## API Documentation\r\n* [http://reportablesystems.github.com/rpe-tools/docs/index.html](http://reportablesystems.github.com/rpe-tools/docs/index.html)"}